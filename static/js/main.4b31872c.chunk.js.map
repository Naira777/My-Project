{"version":3,"sources":["Components/Header/Header.module.css","Components/FormsControls/FormsControls.module.css","Photo/earth2.jpg","Photo/earth.jpg","Components/Navbar/Navbar.jsx","Components/Header/Header.jsx","api.js","Redux/nasa-reducer.js","Redux/weather-reducer.js","Redux/aztro-reducer.js","Redux/redux.js","Redux/selectors-nasa.js","Components/PhotoofDay/DisplayPhoto.jsx","Components/FormsControls/FormsControls.js","Components/PhotoofDay/PhotoDayForm.jsx","Components/PhotoofDay/Calendar.jsx","Components/PhotoofDay/PhotoContainer.jsx","Redux/selectors-weather.js","Components/Weather/DisplayWeather.jsx","Components/Weather/WeatherForm.jsx","Components/Weather/WeatherContainer.js","Redux/selector-aztro.js","Components/Aztro/aztro.jsx","Components/Aztro/GetAztro.jsx","Components/Aztro/AztroContainer.jsx","App.js","serviceWorker.js","index.js","Components/PhotoofDay/DisplayPhoto.module.css","Components/Navbar/Navbar.module.css","Components/Aztro/aztro.module.css","Components/PhotoofDay/Calendar.module.css"],"names":["module","exports","Navbar","className","s","nav","item","to","activeClassName","activeLink","Header","header","src","earth2","foto","instance","axios","baseURL","headers","instanceforweather","nasaAPI","date","get","then","response","data","weatherAPI","cityName","today","Date","initialState","photo","url","title","explanation","day","setData","type","nasaReducer","state","action","country","temp","description","humidity","windspeed","icon","sunrise","sunset","moonrise","moonset","localtime","setDataWeather","setDataAstro","dataastro","weatherReducer","location","name","current","temp_c","wind_kph","condition","text","astronomy","astro","aztroReducer","reducers","combineReducers","form","formReducer","nasaPage","weatherPage","aztroPage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","getNasaPhoto","getDay","getExplanation","getTitleOfNasaPhoto","DisplayPhoto","Photo","useSelector","TitleOfPhoto","Explanation","all","title1","title2","textcolor","class","FormControl","input","meta","props","child","hasError","touched","error","styles","formControl","children","Input","restProps","PhotoDayReduxForm","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","aria-label","Cal","value","moment","selectedValue","onSelect","setState","setDay","format","onPanelChange","this","alert","message","cal","React","Component","connect","PhotoContainer","memo","useState","editMode","setEditeMode","Day","Error","dispatch","useDispatch","useEffect","a","formData","Day1","searchedDay","data-dismiss","getTemp","getcityName","getCountry","getWindspeed","getDescription","getHumidity","getIcon","getSunset","getSunrise","getMoonrise","getMoonset","getLocaltime","DisplayWeather","WeatherReduxForm","WeatherContainer","City","setCity","City1","searchedCity","getName","Aztro","json","URL","fetch","method","aztro","current_date","compatibility","lucky_number","lucky_time","color","date_range","mood","Aztro1","getInfo","e","preventDefault","target","setName","changeEditMode","onClick","AztroContainer","editmode","setEditmode","GetAztro","App","path","render","earth","SamuraiJSApp","basename","process","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4b31872c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__qOx37\",\"foto\":\"Header_foto__tJa9w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3LMp-\",\"error\":\"FormsControls_error__2UFDB\",\"formSummaryError\":\"FormsControls_formSummaryError__1MPc0\"};","module.exports = __webpack_public_path__ + \"static/media/earth2.cb68c6dc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/earth.efc38578.jpg\";","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n   return  <nav className={s.nav}>\r\n   <div className={s.item}> \r\n  <NavLink to=\"/astronomypictureoftheday\" activeClassName={s.activeLink}> Astronomy picture  </NavLink>\r\n   </div >\r\n   <div className={s.item}> \r\n  <NavLink to=\"/weatherofCity\" activeClassName={s.activeLink}> Weather by City </ NavLink>\r\n   </div>\r\n                 \r\n  <div className={s.item}> \r\n  <NavLink to=\"/aztro\" activeClassName={s.activeLink}> Horoscope </ NavLink>\r\n   </div>\r\n\r\n\r\n\r\n</nav>\r\n}\r\n\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport earth2 from '../../Photo/earth2.jpg';\r\n\r\nconst Header = () => {\r\n   \r\n \r\n   return <header className={s.header}>\r\n      \r\n       <img src={earth2} className={s.foto} />               \r\n\r\n\r\n   \r\n    </header>  \r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default Header;\r\n","\r\nimport * as axios from 'axios';\r\n\r\n\r\n\r\nconst instanceforaztro = axios.create ({ \r\n\r\n\r\n    \r\n    baseURL: 'https://aztro.sameerkumar.website'\r\n \r\n\r\n\r\n});\r\n\r\nconst instance = axios.create ({ \r\n\r\n\r\n    \r\n    baseURL: 'https://api.nasa.gov/planetary/apod',\r\n    headers: {\r\n\r\n       \"API-KEY\": \"WpLoa1jcg8MdhMrIfup0CYk45GsdhRQLlbcjVa3r\"\r\n    }\r\n\r\n\r\n});\r\n\r\n\r\nconst instanceforweather = axios.create ({ \r\n\r\n    baseURL: 'http://api.weatherapi.com/v1',\r\n    headers: {\r\n        \"Transfer-Encoding\": \"chunked\",\r\n        \"Connection\": \"keep-alive\",\r\n        \"Vary\": \"Accept-Encoding\",\r\n        \"CDN-PullZone\": \"93447\",\r\n        \"CDN-Uid\": \"8fa3a04a-75d9-4707-8056-b7b33c8ac7fe\",\r\n        \"CDN-RequestCountryCode\": \"FI\",\r\n        \"CDN-EdgeStorageId\": \"615\",\r\n        \"Request-Context\": \"appId=cid-v1:89996683-9a04-40b3-8e46-77754119dcf5\",\r\n        \"CDN-CachedAt\": \"2020-08-24 14:02:04\",\r\n        \"CDN-RequestId\": \"5f18bd2b96858fcc2d300683faa07c10\",\r\n        \"CDN-Cache\": \"MISS\",\r\n        \"Cache-Control\": \"public, max-age=180\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Date\": \"Mon, 24 Aug 2020 12:02:04 GMT\",\r\n        \"Server\": \"BunnyCDN-FI1-615\",\r\n       \"API-KEY\": \"5e702696db01489eaa2124026202008\"\r\n    }\r\n\r\n\r\n});\r\n\r\nexport const nasaAPI = { \r\n\r\n\r\n    getPhotoOfTheDay (date)  {\r\n    \r\n    \r\n        return instance.get(`?date=${date}&api_key=WpLoa1jcg8MdhMrIfup0CYk45GsdhRQLlbcjVa3r`)\r\n    \r\n       .then(response =>\r\n\r\n         {\r\n             return response.data;\r\n    \r\n          });  \r\n\r\n}\r\n}\r\nexport const weatherAPI = { \r\n\r\n\r\n    getWeather (cityName)  {\r\n    \r\n    \r\n        return instanceforweather.get(`/current.json?key=5e702696db01489eaa2124026202008&q=${cityName}`)\r\n    \r\n       .then(response =>\r\n\r\n         {\r\n            return response.data;\r\n    \r\n       }); \r\n\r\n\r\n},\r\n\r\n getAstro(cityName) {\r\n\r\nconst today= new Date();\r\n        return instanceforweather.get(`/astronomy.json?key=5e702696db01489eaa2124026202008&q=${cityName}&dt=${today}`)\r\n    \r\n       .then(response =>\r\n\r\n         {\r\n            return response.data;\r\n    \r\n       }); \r\n\r\n\r\n    \r\n}\r\n\r\n\r\n\r\n}\r\n\r\nexport const aztroAPI = { \r\n\r\ngetSignAztro(name) {\r\n   const URL= 'https://aztro.sameerkumar.website';\r\n return   fetch(URL, {\r\n        method: 'POST'\r\n    }).then(response => response.json());\r\n          // return instanceforaztro.post(`/?sign=${name}&day=tomorrow`);\r\n        \r\n    \r\n    \r\n        \r\n    }\r\n\r\n}","import { nasaAPI } from \"../api\";\r\n\r\nconst SAVE_DATA_SUCCESS = \"SAVE_DATA_SUCCESS\";\r\nconst SAVE_DAY = \"SAVE_DAY\";\r\n\r\nconst initialState = {\r\n \r\n  photo: {\r\n\r\n url: \"\",\r\n title: \"\",\r\n explanation: \"\"\r\n\r\n  },\r\n\r\n  day: \"\"\r\n \r\n};\r\n\r\nconst nasaReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    \r\n\r\n     case SAVE_DATA_SUCCESS: {\r\n      return { ...state,\r\n          photo: { ...state.photo, url: action.data.url, title: action.data.title, explanation: action.data.explanation} };\r\n    \r\n      }\r\n    \r\n    case SAVE_DAY: {\r\n\r\n      return {...state,\r\n      day: action.day\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const setDay = (day) => {\r\n  return { type: SAVE_DAY, day };\r\n};\r\n\r\n\r\nexport const setData = (data) => {\r\n  return { type: SAVE_DATA_SUCCESS, data };\r\n};\r\n\r\nexport const getPhotoFromNasa = (date) => async (dispatch) => {\r\n  const data = await nasaAPI.getPhotoOfTheDay(date);\r\n   dispatch(setData(data));\r\n\r\n   \r\n};\r\nexport default nasaReducer;","import { weatherAPI } from \"../api\";\r\n\r\nconst SAVE_CITY_WEATHER= \"SAVE_CITY_WEATHER\";\r\nconst SAVE_CITY_ASTRO= \"SAVE_CITY_ASTRO\";\r\n\r\nconst initialState = {\r\n \r\n  cityName: \"\",\r\n  country: \"\",\r\n  temp: 0,\r\n  description: \"\",\r\n  humidity: 0,\r\n  windspeed: 0,\r\n icon: \"\",\r\n sunrise: \"\",\r\n sunset: \"\",\r\n moonrise: \"\",\r\n moonset: \"\",\r\n localtime: \"\"\r\n}\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    \r\n\r\n     case SAVE_CITY_WEATHER: {\r\n      return { ...state,\r\n         cityName: action.data.location.name,\r\n         country: action.data.location.country,\r\n         temp: action.data.current.temp_c,\r\n          humidity: action.data.current.humidity,\r\n          windspeed: action.data.current.wind_kph,       \r\n         description: action.data.current.condition.text,\r\n                icon: action.data.current.condition.icon\r\n                \r\n        }\r\n      }\r\n        case SAVE_CITY_ASTRO: {\r\n\r\n          return { ...state,\r\n               sunrise: action.dataastro.astronomy.astro.sunrise,\r\n                sunset: action.dataastro.astronomy.astro.sunset,\r\n                moonrise: action.dataastro.astronomy.astro.moonrise,\r\n                moonset: action.dataastro.astronomy.astro.moonset,\r\n                localtime:  action.dataastro.location.localtime,\r\n          }\r\n\r\n        \r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const setDataWeather= (data) => {\r\n  return { type: SAVE_CITY_WEATHER, data};\r\n};\r\n\r\nexport const setDataAstro= (dataastro) => {\r\n  return { type: SAVE_CITY_ASTRO, dataastro};\r\n};\r\n\r\nexport const getWeatherForCity = (name) => async (dispatch) => {\r\n  const data = await weatherAPI.getWeather(name);\r\n  dispatch(setDataWeather(data));\r\n  const dataastro= await weatherAPI.getAstro(name);\r\n  dispatch(setDataAstro(dataastro));\r\n\r\n   \r\n};\r\n\r\nexport default weatherReducer;","const SAVE_NAME = \"SAVE_NAME\";\r\n\r\nconst initialState = {\r\n \r\n name: \"aries\"\r\n \r\n};\r\n\r\nconst aztroReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    \r\n\r\n     case SAVE_NAME: {\r\n      return { ...state,\r\n          name: action.name };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setName = (name) => {\r\n    return { type: SAVE_NAME, name };\r\n  };\r\n\r\n\r\n  export default aztroReducer;\r\n  ","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\n\r\nimport thunkMiddleware  from 'redux-thunk';\r\nimport nasaReducer from './nasa-reducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport weatherReducer from \"./weather-reducer\";\r\nimport aztroReducer from \"./aztro-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n\r\nform: formReducer,\r\nnasaPage: nasaReducer,\r\nweatherPage: weatherReducer,\r\naztroPage: aztroReducer\r\n\r\n});\r\n\r\n\r\n const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n const store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore (reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","\r\n\r\nexport const getNasaPhoto = (state) => {\r\n    return state.nasaPage.photo.url;\r\n}\r\nexport const getDay = (state) => {\r\n    return state.nasaPage.day;\r\n}\r\nexport const getExplanation = (state) => {\r\n    return state.nasaPage.photo.explanation;\r\n}\r\nexport const getTitleOfNasaPhoto = (state) => {\r\n\r\nreturn state.nasaPage.photo.title;\r\n\r\n\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getNasaPhoto, getTitleOfNasaPhoto, getExplanation } from '../../Redux/selectors-nasa';\r\n\r\nimport ReactPlayer from \"react-player\";\r\nimport s from \"./DisplayPhoto.module.css\";\r\n\r\n\r\nconst DisplayPhoto = () => {\r\n  const Photo = useSelector(getNasaPhoto);\r\n  const TitleOfPhoto = useSelector(getTitleOfNasaPhoto);\r\n  const Explanation= useSelector(getExplanation);\r\n\r\n\r\n  return (\r\n    <div className={s.all}>\r\n      <div className={s.title}>\r\n      <div className={s.title1}> This is the Astronomy Picture of the Day </div>\r\n      <div className={s.title2}>  {TitleOfPhoto}</div>\r\n      </div>\r\n  <div className={s.textcolor}>{Explanation}</div>\r\n     \r\n\r\n           <img src={Photo} class=\"mx-auto d-block\" />\r\n\r\n          \r\n\r\n      <ReactPlayer\r\n        url={Photo}\r\n      />\r\n\r\n       \r\n      </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default DisplayPhoto;\r\n","import React from \"react\";\r\nimport styles from \"../FormsControls/FormsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nexport const FormControl = ({ input, meta, child, ...props }) => {\r\n\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      <div>{props.children}</div>\r\n\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      {\" \"}\r\n      <textarea {...input} {...restProps} />{\" \"}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      {\" \"}\r\n      <input {...input} {...restProps} />{\" \"}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validators,\r\n  component,\r\n  props = {},\r\n  text = \"\"\r\n) => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        placeholder={placeholder}\r\n        name={name}\r\n        validate={validators}\r\n        component={component}\r\n        {...props}\r\n      />{\" \"}\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Input } from \"../FormsControls/FormsControls\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport s from './DisplayPhoto.module.css'\r\n\r\nconst PhotoDayForm = (props) => {\r\n  return (\r\n    <div>\r\n      <label className={s.textcolor}>\r\n        <div className={s.title1}> Get astronomy photo of the day </div>\r\n      </label>\r\n   \r\n      <form class=\"form-inline\" onSubmit={props.handleSubmit}>\r\n        <Field\r\n          component={Input}\r\n          name={\"searchedDay\"}\r\n          type={\"search\"}\r\n          placeholder={\"YYYY-MM-DD\"}\r\n          aria-label=\"Search\"\r\n          class=\"form-control mr-ms-2\"\r\n        />\r\n\r\n        <button class=\"btn btn-outline-success\" type=\"submit\">\r\n          Get Astronomy Picture\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst PhotoDayReduxForm = reduxForm({ form: \"getpicture\" })(PhotoDayForm);\r\n\r\nexport default PhotoDayReduxForm;","import React from 'react';\r\nimport { Calendar, Alert } from 'antd';\r\nimport moment from 'moment';\r\nimport s from './Calendar.module.css';\r\nimport { connect } from 'react-redux';\r\nimport {setDay} from './../../Redux/nasa-reducer';\r\n\r\nclass Cal extends React.Component {\r\n    constructor(props){\r\n\r\n        super(props)\r\n    }\r\n  state = {\r\n    value: moment(),\r\n    selectedValue: moment(),\r\n  };\r\n\r\n\r\n  componentDidMount () {\r\n\r\n\r\n\r\n\r\n  }\r\n  onSelect = value => {\r\n    this.setState({\r\n      value,\r\n      selectedValue: value,\r\n    \r\n    });\r\n    this.props.setDay(value.format('YYYY-MM-DD'));\r\n  };\r\n\r\n  onPanelChange = value => {\r\n    this.setState({ value });\r\n this.props.setDay(value.format('YYYY-MM-DD'));\r\n  };\r\n\r\n  render() {\r\n    const { value, selectedValue } = this.state;\r\n\r\n    return (\r\n    \r\n      <>\r\n        <div className= {s.alert}> <Alert\r\n         message={`You selected date: ${selectedValue && selectedValue.format('YYYY-MM-DD')}`} /> </div>\r\n        \r\n       <div className={s.cal}> <Calendar value={value} onSelect={this.onSelect} onPanelChange={this.onPanelChange} /></div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state)=> {\r\n\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, { setDay } )( Cal);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DisplayPhoto from \"./DisplayPhoto\";\r\nimport { getPhotoFromNasa } from '../../Redux/nasa-reducer';\r\nimport PhotoDayReduxForm from \"./PhotoDayForm\";\r\nimport Cal  from './Calendar';\r\nimport s from './Calendar.module.css';\r\nimport {getDay} from './../../Redux/selectors-nasa';\r\n\r\nconst PhotoContainer = React.memo((props) => {\r\nconst [editMode, setEditeMode] = useState(true);\r\nconst [Day, setDay] = useState();\r\nconst [Error,setError]= useState();\r\nconst day= useSelector(getDay);\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n    const Day1= formData.searchedDay;\r\n    if ( typeof Day1 == typeof Date() ){\r\n      setDay(Day1);\r\n\r\n    }else \r\n    {\r\n      setDay(day);\r\n     \r\n        \r\n    }\r\n\r\n    }\r\n\r\n    const dispatch= useDispatch();\r\n\r\n    useEffect(() => {\r\n    \r\n    dispatch(getPhotoFromNasa(Day))\r\n    .then(() => {\r\n      setEditeMode(false)}\r\n    ); \r\n    \r\n      }, [Day]);\r\n   \r\n    \r\n\r\n\r\n  return (\r\n    <>\r\n      <div>{editMode &&  <PhotoDayReduxForm onSubmit={onSubmit} /> }</div>\r\n\r\n   <div className= {s.cal}>{editMode && <Cal />}</div>\r\n\r\n   {Error && editMode && <div class=\"alert alert-success alert-dismissible\">\r\n  <button type=\"button\"  class=\"close\" data-dismiss=\"alert\">&times;</button>\r\n  <strong>Attention!</strong> Please Enter Date!!!\r\n</div> }\r\n \r\n\r\n\r\n      <div>\r\n        {!editMode  && (\r\n          <DisplayPhoto />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default PhotoContainer;\r\n","\r\nexport const getTemp = (state) => {\r\n    return state.weatherPage.temp;\r\n}\r\n\r\nexport const getcityName= (state) => {\r\n    return state.weatherPage.cityName;\r\n}\r\nexport const getCountry = (state) => {\r\n\r\nreturn state.weatherPage.country;\r\n\r\n\r\n}\r\nexport const getWindspeed = (state) => {\r\n    return state.weatherPage.windspeed;\r\n}\r\n\r\nexport const getSunRise= (state) => {\r\n    return state.weatherPage.sun.sunrise;\r\n}\r\nexport const getSunSet= (state) => {\r\n    return state.weatherPage.sun.sunset;\r\n}\r\nexport const getDescription = (state) => {\r\n\r\nreturn state.weatherPage.description;\r\n\r\n}\r\n\r\nexport const getHumidity = (state) => {\r\n\r\nreturn state.weatherPage.humidity;\r\n\r\n}\r\nexport const getIcon = (state) => {\r\n\r\nreturn state.weatherPage.icon;\r\n\r\n}\r\nexport const getSunset = (state) => {\r\n\r\nreturn state.weatherPage.sunset;\r\n\r\n}\r\nexport const getSunrise = (state) => {\r\n\r\nreturn state.weatherPage.sunrise;\r\n\r\n}\r\nexport const getMoonrise = (state) => {\r\n\r\nreturn state.weatherPage.moonrise;\r\n\r\n}\r\nexport const getMoonset = (state) => {\r\n\r\nreturn state.weatherPage.moonset;\r\n\r\n}\r\nexport const getLocaltime = (state) => {\r\n\r\nreturn state.weatherPage.localtime;\r\n\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getcityName, getCountry, getTemp, getDescription, getWindspeed, getSunrise, getSunset, getHumidity, getIcon, getMoonrise, getMoonset, getLocaltime } from '../../Redux/selectors-weather';\r\n\r\n\r\nconst DisplayWeather = () => {\r\n\r\nconst cityName= useSelector(getcityName);\r\nconst country= useSelector(getCountry);\r\nconst temp= useSelector(getTemp);\r\nconst description= useSelector(getDescription);\r\nconst windspeed= useSelector(getWindspeed);\r\nconst humidity= useSelector(getHumidity);\r\nconst icon=useSelector(getIcon);\r\nconst sunrise= useSelector(getSunrise);\r\nconst sunset= useSelector(getSunset);\r\nconst moonrise= useSelector(getMoonrise);\r\nconst moonset=useSelector(getMoonset);\r\nconst localtime=useSelector(getLocaltime);\r\n\r\nreturn (<div>\r\n\r\n\r\n<table class=\"table table-dark\">\r\n    <thead>\r\n      <tr>\r\n          <th>Country</th>\r\n          <th>{country}</th>\r\n              </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>City</td>\r\n   <td>{cityName}</td>\r\n       </tr>\r\n     <tr>\r\n        <td>Temperature</td>\r\n         <td>{temp}°C</td>\r\n       </tr>\r\n      <tr>\r\n        <td>Description</td>\r\n<td>{description}<img src={icon} /></td>\r\n       </tr>\r\n\r\n       <tr>\r\n        <td>Humidity</td>\r\n   <td>{humidity}%</td>\r\n       </tr>\r\n\r\n        <tr>\r\n        <td>Wind speed</td>\r\n      <td>{windspeed} kph</td>\r\n       </tr>\r\n   \r\n     <tr>\r\n        <td>Sunrise</td>\r\n      <td>{sunrise}</td>\r\n       </tr>\r\n       \r\n\r\n <tr>\r\n        <td>Sunset</td>\r\n      <td>{sunset}</td>\r\n       </tr>\r\n <tr>\r\n        <td>Moonrise</td>\r\n      <td>{moonrise}</td>\r\n       </tr>\r\n\r\n <tr>\r\n        <td>Moonset</td>\r\n      <td>{moonset} </td>\r\n       </tr>\r\n\r\n <tr>\r\n        <td>Local Time</td>\r\n      <td>{localtime} </td>\r\n       </tr>\r\n\r\n\r\n    </tbody>\r\n  </table>\r\n\r\n\r\n\r\n\r\n    </div>)\r\n}\r\n\r\n\r\nexport default DisplayWeather;","import React from \"react\";\r\nimport { Input } from \"././../FormsControls/FormsControls\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport s from '../PhotoofDay/DisplayPhoto.module.css';\r\n\r\nconst WeatherForm = (props) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        <h3 className= {s.textcolor}> Enter City Name </h3>\r\n      </label>\r\n   \r\n      <form class=\"form-inline\" onSubmit={props.handleSubmit}>\r\n        <Field\r\n          component={Input}\r\n          name={\"searchedCity\"}\r\n          type={\"search\"}\r\n          placeholder={\"Enter City Name\"}\r\n          aria-label=\"Search\"\r\n          class=\"form-control mr-sm-2\"\r\n        />\r\n\r\n        <button class=\"btn btn-outline-success\" type=\"submit\">\r\n          Get Weather\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst WeatherReduxForm = reduxForm({ form: \"getweather\" })(WeatherForm);\r\n\r\nexport default WeatherReduxForm;","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DisplayWeather from \"./DisplayWeather\";\r\nimport WeatherReduxForm from \"./WeatherForm\";\r\nimport { getWeatherForCity } from \"../../Redux/weather-reducer\";\r\n\r\nconst WeatherContainer = React.memo((props) => {\r\nconst [editMode, setEditeMode] = useState(true);\r\nconst [City, setCity] = useState();\r\n\r\n\r\n\r\n   const onSubmit = (formData) => {\r\n   const City1= formData.searchedCity;\r\n    setCity(City1);\r\n    }\r\n    \r\n\r\n\r\n    const dispatch= useDispatch();\r\n\r\n    useEffect(() => {\r\n    \r\n    dispatch(getWeatherForCity(City))\r\n    .then(() => {\r\n      setEditeMode(false)}\r\n    ); \r\n    \r\n      }, [City]);\r\n   \r\n    \r\n\r\n\r\n  return (\r\n    <>\r\n      <div>{editMode &&  <WeatherReduxForm onSubmit={onSubmit} />}</div>\r\n\r\n\r\n     <div>\r\n        {!editMode  && (\r\n          <DisplayWeather />\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default WeatherContainer;\r\n","export const getName = (state) => {\r\n\r\n    return state.aztroPage.name;\r\n    \r\n       }","import React from 'react';\r\nimport s from './aztro.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { getName } from '../../Redux/selector-aztro';\r\nimport { aztroAPI } from '../../api';\r\n\r\n\r\nclass Aztro extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          json: {}\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount () {\r\n\r\n        const URL = `https://aztro.sameerkumar.website/?sign=${this.props.name}&day=today`;\r\n        fetch(URL, {\r\n            method: 'POST'\r\n        }).then(response => response.json())\r\n        .then(json => { this.setState({json}); });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className={s.aztro}>\r\n              <div className= {s.title}> Your sign: {this.props.name}  </div>\r\n              Current Date: {this.state.json.current_date} <br />\r\n              Compatibility: {this.state.json.compatibility} <br />\r\n              Lucky Number: {this.state.json.lucky_number} <br />\r\n              Lucky Time: {this.state.json.lucky_time} <br />\r\n              Color: {this.state.json.color} <br />\r\n              Date Range: {this.state.json.date_range} <br />\r\n              Mood: {this.state.json.mood} <br />\r\n              Description: {this.state.json.description} <br />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n    name: getName(state)\r\n    \r\n    };\r\n};\r\n        \r\nexport default connect (mapStateToProps)(Aztro);\r\n    \r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getName } from '../../Redux/selector-aztro';\r\nimport {setName}  from './../../Redux/aztro-reducer';\r\nimport s from '../Aztro/aztro.module.css';\r\n\r\n\r\nclass Aztro1 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n   \r\n  }\r\n\r\n\r\ngetInfo = (e)=> {\r\ne.preventDefault();\r\nconst name = e.target.value;\r\nthis.props.setName(name);\r\nthis.props.changeEditMode();\r\n}\r\n\r\nrender(){ \r\n  return <>\r\n  <div className={s.aztro }> \r\n  \r\n  <div className={s.title}>Choose your sign </div>\r\n \r\n  </div>\r\n\r\n <div class=\"d-flex flex-nowrap\">\r\n\r\n<input type=\"button\" class=\"btn btn-success \"  value=\"Aries\"  onClick={this.getInfo}  /> <br/>\r\n<div>     \r\n\"          \"\r\n\r\n</div>\r\n<input type=\"button\"  class=\"btn btn-success\"  value=\"Taurus\" onClick={this.getInfo} name=\"taurus\" /><br/>\r\n<div>     \r\n\"          \"\r\n\r\n</div>\r\n<input type=\"button\" class=\"btn btn-success\" value=\"Gemini\" onClick={this.getInfo } name=\"gemini\" /><br/>\r\n<div>     \r\n\"          \"\r\n\r\n</div>\r\n<input type=\"button\" class=\"btn btn-success\" value= \"Cancer\" onClick={this.getInfo } name=\"cancer\"/><br/>\r\n<div>     \r\n\"          \"\r\n\r\n</div>\r\n<input type=\"button\" class=\"btn btn-success\" value= \"Leo\" onClick={this.getInfo } name=\"leo\" /><br/>\r\n<div>     \r\n\"          \"\r\n\r\n</div>\r\n<input type=\"button\" class=\"btn btn-success\" value= \"Virgo\" onClick={this.getInfo } name=\"virgo\" /><br/>\r\n<div>     \r\n\"          \"\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<div>     \r\n\"                         \"\r\n\r\n\"                    \"\r\n\r\n</div>\r\n\r\n\r\n\r\n<div class=\"d-flex flex-nowrap\">\r\n<input type=\"button\" class=\"btn btn-success\" value= \"Libra\" onClick={this.getInfo } name=\"libra\" /><br/>\r\n<div>     \r\n\"          \"\r\n\r\n</div>\r\n\r\n\r\n\r\n<input type=\"button\" class=\"btn btn-success\" value= \"Scorpio\" onClick={this.getInfo } name=\"scorpio\" /><br/>\r\n<div>     \r\n\"          \"\r\n\r\n</div>\r\n\r\n\r\n\r\n<input type=\"button\" class=\"btn btn-success\" value= \"Sagittarius\" onClick={this.getInfo } name=\"sagittarius\" /><br/>\r\n<div>     \r\n\"          \"\r\n\r\n</div>\r\n<input type=\"button\" class=\"btn btn-success\" value= \"Capricorn\" onClick={this.getInfo } name=\"capricorn\" /><br/>\r\n<div>     \r\n\"          \"\r\n\r\n</div>\r\n<input type=\"button\" class=\"btn btn-success\" value= \"Aquarius\" onClick={this.getInfo } name=\"aquarius\" /><br/>\r\n<div>     \r\n\"          \"\r\n\r\n</div>\r\n<input type=\"button\" class=\"btn btn-success\" value= \"Pisces\" onClick={this.getInfo } name=\"pisces\" /><br/>\r\n\r\n</div>\r\n</>\r\n\r\n}\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\nreturn{\r\nname: getName(state)\r\n\r\n};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setName: (name) => {\r\n      dispatch(setName(name));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Aztro1);\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport Aztro from \"./aztro\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { getName } from \"../../Redux/selector-aztro\";\r\nimport GetAztro from \"./GetAztro\";\r\n\r\nconst AztroContainer = () => {\r\n  const [editmode, setEditmode] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      {!editmode && (\r\n        <div>\r\n          <GetAztro changeEditMode={()=>{setEditmode(true)}} />\r\n        </div>\r\n      )}\r\n\r\n      {editmode && (\r\n        <div>\r\n          <Aztro />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AztroContainer;\r\n","import React from 'react';\n\nimport './App.css';\nimport { BrowserRouter, Route, HashRouter } from 'react-router-dom';\nimport Navbar from './Components/Navbar/Navbar';\nimport Header from './Components/Header/Header';\nimport store from './Redux/redux';\nimport { Provider } from 'react-redux';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport PhotoContainer from '../src/Components/PhotoofDay/PhotoContainer';\n\nimport WeatherContainer from './Components/Weather/WeatherContainer';\nimport earth from '../src/Photo/earth.jpg';\nimport Aztro from './Components/Aztro/aztro';\nimport AztroContainer from './Components/Aztro/AztroContainer';\nimport { Button, DatePicker, version } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nclass App extends React.Component {\n \n    \n\n  render() {\n\n    return (    \n      <div className=\"app-wrapper\">\n       \n      <Header />\n        <Navbar />\n        \n        <div class=\"app-wrapper-content\">\n\n       <div className=\"asfoto\">\n         <Route path=\"/astronomypictureoftheday\" render={() => <PhotoContainer />} />\n  <Route path=\"/weatherofCity\" render={() => <WeatherContainer />} />\n  <Route path=\"/aztro\" render={() => <AztroContainer />} />\n</div>\n\n          \n  \n          <div > \n         <img src={earth} className=\"foto\" />\n         </div>\n\n            \n        </div>\n      </div>\n      \n    );\n  }\n}\n\n\n\n\n\nconst SamuraiJSApp = (props) => {\n\n\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL} >\n     <Provider store={store}>\n        <App />\n     </Provider>\n    </HashRouter>\n  );\n};\nexport default SamuraiJSApp;\n\n\n\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport SamuraiJSApp from './App';\nimport { Button, DatePicker, version } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SamuraiJSApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"DisplayPhoto_title__1YveL\",\"textcolor\":\"DisplayPhoto_textcolor__1I0zN\",\"all\":\"DisplayPhoto_all__3ZVMR\",\"title1\":\"DisplayPhoto_title1__2mQdm\",\"title2\":\"DisplayPhoto_title2__1sIRK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2OUtl\",\"item\":\"Navbar_item__2VTmv\",\"activeLink\":\"Navbar_activeLink__2vwVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aztro\":\"aztro_aztro__1nGkR\",\"title\":\"aztro_title__2JXjA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cal\":\"Calendar_cal__b7fZi\",\"alert\":\"Calendar_alert__3mbRu\"};"],"sourceRoot":""}